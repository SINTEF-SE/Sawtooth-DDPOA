version: "3.6"

# Validators across all compose files join this docker network for inter-node
# communication
networks:
  validators:
    external:
      name: test_validators_${ISOLATION_ID}
  rest_apis:
    external:
      name: test_rest_apis_${ISOLATION_ID}

volumes:
  test_shared_data:
    external: true
    name: test_shared_data_${ISOLATION_ID}

# TODO: CREATE PROPER SCRIPT FILE FOR ME NEED TO DO STATIC PEERING FOR THIS I THINK (TO MAKE TESTS REPRODUCABLE)
services:
  validator:
    image: hyperledger/sawtooth-validator:chime
    labels:
      - "com.sawtooth.isolation_id=${ISOLATION_ID:-}"
    command: "bash -c \"\
      if [ ! -e /etc/sawtooth/keys/validator.pub ]; then sawadm keygen; fi && \
      if [ ! -e /shared_data/validators/$$(hostname) ]; then \
        cat /etc/sawtooth/keys/validator.pub > /shared_data/validators/$$(hostname); \
      fi && \
      echo \\\"-- /var/lib/sawtooth\\\" && ls /var/lib/sawtooth && \
      echo \\\"-- /shared_data/validators \\\" && ls /shared_data/validators && \
      if [ ${GENESIS:-0} != 0 -a ! -e /shared_data/genesis.batch ]; then \
        echo \\\"Running Genesis\\\" && \
        sawset genesis \
          -k /shared_data/keys/settings.priv \
          -o config-genesis.batch && \
        sawset proposal create \
          -k /shared_data/keys/settings.priv \
          sawtooth.consensus.algorithm.name=ddpoa \
          sawtooth.consensus.algorithm.version=0.1 \
          sawtooth.consensus.ddpoa.members=\\['\\\"'$$(cd /shared_data/validators && paste $$(ls -1) -d , | sed s/,/\\\\\\\",\\\\\\\"/g)'\\\"'\\] \
          sawtooth.consensus.ddpoa.seats=7 \
          sawtooth.gossip.time_to_live=1 \
          -o config.batch && \
        sawadm genesis \
          config-genesis.batch config.batch && \
        cp /var/lib/sawtooth/genesis.batch /shared_data/genesis.batch && \
        ls /var/lib/sawtooth; \
      fi && \
      export PEERS=$$(for host in $$(ls /shared_data/validators -1); do \
            if [ $$host != $$(hostname) ]; then \
              echo \\\"tcp://$$host:8800\\\"; \
            fi; done | tr \\\"\n\\\" \\\",\\\" | sed s\\/,$$\\/\\\n\\/); \
      echo \\\"-- PEERS \\\" && echo \\\"PEERS=$$PEERS\\\"; \
      if [ \\\"$$PEERS\\\" = \\\"\\\" ]; then \
        echo \\\"No peers to connect to...\\\";
        sawtooth-validator -vv \
            --endpoint tcp://$$(hostname):8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth1:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --opentsdb-url http://influxdb:8086 \
            --opentsdb-db metrics \
            --scheduler parallel; \
      else \
        echo \\\"Connecting to $$PEERS\\\";
        sawtooth-validator -vv \
            --endpoint tcp://$$(hostname):8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth1:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers $$PEERS \
            --opentsdb-url http://influxdb:8086 \
            --opentsdb-db metrics \
            --scheduler parallel; \
      fi \
    \""
    volumes:
      - test_shared_data:/shared_data
    networks:
      default:
      validators:
    expose:
      - 8800
    stop_signal: SIGKILL

  consensus:
    image: sawtooth-ddpoa-engine-local:${ISOLATION_ID}
    labels:
      - "com.sawtooth.isolation_id=${ISOLATION_ID:-}"
    build:
      context: /project/sawtooth-ddpoa/
      dockerfile: /project/sawtooth-ddpoa/Dockerfile
    volumes:
      - .:/project/sawtooth-pbft
    command: "bash -c \"python3 main.py --connect tcp://validator:5050 -vv \""
    stop_signal: SIGKILL

  rest-api:
    image: sawtooth-rest-api:${ISOLATION_ID}
    labels:
      - "com.sawtooth.isolation_id=${ISOLATION_ID:-}"
    command: "bash -c \"
      if [ ! -e /shared_data/rest_apis/$$(hostname) ]; then \
        touch /shared_data/rest_apis/$$(hostname);
      fi && \
      sawtooth-rest-api --connect tcp://validator:4004 --bind $$(hostname):8008  --opentsdb-url http://influxdb:8086 --opentsdb-db metrics \
    \""
    volumes:
      - test_shared_data:/shared_data
    networks:
      default:
      rest_apis:
    expose:
      - 8008
    stop_signal: SIGKILL

  intkey-tp-python:
    image: sawtooth-intkey-tp-python:${ISOLATION_ID}
    labels:
      - "com.sawtooth.isolation_id=${ISOLATION_ID:-}"
    command: intkey-tp-python -vv -C tcp://validator:4004
    stop_signal: SIGKILL

  settings-tp:
    image: sawtooth-settings-tp:${ISOLATION_ID}
    labels:
      - "com.sawtooth.isolation_id=${ISOLATION_ID:-}"
    command: settings-tp -C tcp://validator:4004 -v
    stop_signal: SIGKILL